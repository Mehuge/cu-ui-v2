<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" 
  xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <ProjectGuid>{6AE2C434-CAB1-4A81-BF8B-4D6F6CC8194F}</ProjectGuid>
    <ProjectTypeGuids>{349c5851-65df-11da-9384-00065b846f21};{fae04ec0-301f-11d3-bf4b-00c04f79efbc}</ProjectTypeGuids>
    <OutputType>Library</OutputType>
    <OutputPath>bin</OutputPath>
    <TargetFrameworkVersion>v4.5.1</TargetFrameworkVersion>
    <DebugType>full</DebugType>
    <DebugSymbols>true</DebugSymbols>
    <TypeScriptToolsVersion>1.6</TypeScriptToolsVersion>
    <UseIISExpress>true</UseIISExpress>
    <IISExpressSSLPort/>
    <IISExpressAnonymousAuthentication/>
    <IISExpressWindowsAuthentication/>
    <IISExpressUseClassicPipelineMode/>
    <TypeScriptTarget>ES5</TypeScriptTarget>
    <TypeScriptRemoveComments>false</TypeScriptRemoveComments>
    <TypeScriptAdditionalFlags>--jsx react</TypeScriptAdditionalFlags>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)' == 'Debug'">
    <TypeScriptSourceMap>true</TypeScriptSourceMap>
    <TypeScriptModuleKind>AMD</TypeScriptModuleKind>
  </PropertyGroup>
  <PropertyGroup Condition="'$(Configuration)' == 'Release'">
    <TypeScriptSourceMap>false</TypeScriptSourceMap>
    <TypeScriptModuleKind>AMD</TypeScriptModuleKind>
  </PropertyGroup>
  <ItemGroup>
    <Content Include="src\index.html"/>
    <Content Include="src\mehuge-apitest.ui"/>
    <Content Include="src\sass\main.scss"/>
    <TypeScriptCompile Include="src\ts\main.tsx"/>
  </ItemGroup>
  <PropertyGroup>
    <VisualStudioVersion Condition="'$(VisualStudioVersion)' == ''">10.0</VisualStudioVersion>
    <VSToolsPath Condition="'$(VSToolsPath)' == ''">$(MSBuildExtensionsPath32)\Microsoft\VisualStudio\v$(VisualStudioVersion)</VSToolsPath>
  </PropertyGroup>
  <PropertyGroup>
    <RootNamespace>UI</RootNamespace>
  </PropertyGroup>
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets"/>
  <Import Project="$(VSToolsPath)\TypeScript\Microsoft.TypeScript.targets" Condition="Exists('$(VSToolsPath)\TypeScript\Microsoft.TypeScript.targets')"/>
  <Import Project="$(VSToolsPath)\WebApplications\Microsoft.WebApplication.targets" Condition="'$(VSToolsPath)' != ''"/>
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{349c5851-65df-11da-9384-00065b846f21}">
        <WebProjectProperties>
          <UseIIS>False</UseIIS>
          <AutoAssignPort>True</AutoAssignPort>
          <DevelopmentServerPort>1336</DevelopmentServerPort>
          <DevelopmentServerVPath>/</DevelopmentServerVPath>
          <IISUrl>http://localhost:1336/</IISUrl>
          <NTLMAuthentication>False</NTLMAuthentication>
          <UseCustomServer>False</UseCustomServer>
          <CustomServerUrl></CustomServerUrl>
          <SaveServerSettingsInUserFile>False</SaveServerSettingsInUserFile>
        </WebProjectProperties>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
  <!-- ************* GULP BUILD ************* -->
  <Target Name="Node">
    <Exec Command="$(WINDIR)\system32\where.exe node" ContinueOnError="true" IgnoreExitCode="true" ConsoleToMsBuild="true">
      <Output TaskParameter="ExitCode" PropertyName="ExecExitCode"/>
      <Output TaskParameter="ConsoleOutput" PropertyName="NodePath"/>
    </Exec>
    <PropertyGroup Condition=" '$(ExecExitCode)' == '0' AND '$(NodePath)' != '' ">
      <NodePath>$([System.IO.Path]::GetDirectoryName('$(NodePath)'))</NodePath>
    </PropertyGroup>
    <Error Condition=" '$(NodePath)' == '' OR !Exists('$(NodePath)') " Text="Node.js is not installed, please install it from https://nodejs.org/."/>
  </Target>
  <Target Name="Gulp" DependsOnTargets="Node">
    <Exec Command="$(WINDIR)\system32\where.exe gulp.cmd" ContinueOnError="true" IgnoreExitCode="true" ConsoleToMsBuild="true">
      <Output TaskParameter="ExitCode" PropertyName="ExecExitCode"/>
      <Output TaskParameter="ConsoleOutput" PropertyName="GulpPath"/>
    </Exec>
    <Message Importance="high" Text="Installing Gulp..." Condition=" '$(GulpPath)' == '' OR !Exists('$(GulpPath)') "/>
    <Exec Command="$(WINDIR)\system32\cmd.exe /C &quot;&quot;$(NodePath)\npm.cmd&quot; install -g gulp&quot;" IgnoreExitCode="true" Condition=" '$(GulpPath)' == '' OR !Exists('$(GulpPath)') ">
      <Output TaskParameter="ExitCode" PropertyName="ExecExitCode"/>
    </Exec>
    <Error Condition=" '$(ExecExitCode)' != '0' " Text="Failed to automatically install Gulp, please run `npm install gulp -g` from a commandline."/>
    <Exec Command="$(WINDIR)\system32\where.exe gulp.cmd" ContinueOnError="true" IgnoreExitCode="true" ConsoleToMsBuild="true" Condition=" '$(GulpPath)' == '' OR !Exists('$(GulpPath)') ">
      <Output TaskParameter="ExitCode" PropertyName="ExecExitCode"/>
      <Output TaskParameter="ConsoleOutput" PropertyName="GulpPath"/>
    </Exec>
    <Error Condition=" '$(GulpPath)' == '' OR !Exists('$(GulpPath)') " Text="Can't find Gulp even after installing it, please run `npm install gulp -g` from a commandline."/>
    <PropertyGroup Condition=" '$(GulpPath)' != '' ">
      <GulpPath>$([System.IO.Path]::GetDirectoryName('$(GulpPath)'))</GulpPath>
    </PropertyGroup>
  </Target>
  <Target Name="GulpBuild" DependsOnTargets="Gulp" BeforeTargets="Build">
    <Exec Command=" $(WINDIR)\system32\cmd.exe /C &quot;&quot;$(GulpPath)\gulp.cmd&quot; build --vsgen false&quot; " ContinueOnError="true" IgnoreExitCode="true" WorkingDirectory="$(MSBuildProjectDirectory)">
      <Output TaskParameter="ExitCode" PropertyName="ExecExitCode"/>
    </Exec>
    <Error Condition=" '$(ExecExitCode)' != '0' " Text="Gulp indicated a failure."/>
  </Target>
</Project>